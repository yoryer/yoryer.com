---
const menuOptions = [
  { name: "About", index: "01", link: "#about" },
  { name: "Skills", index: "02", link: "#skills" },
  { name: "Work", index: "03", link: "#work" },
  { name: "Blog", index: "04", link: "#blog" },
  { name: "Contact", index: "05", link: "#contact" },
];
---

<header
  id="header"
  class="fixed top-0 w-full bg-blue-500 xl:py-9 lg:py-7 py-5 sm:py-3 transition-all duration-500 border-b border-yankees-blue font-poppins backdrop-blur-md z-50"
>
  <div class="max-w-6xl mx-auto px-4 h-full flex items-center justify-between">
    <!-- Logo -->
    <a href="#" class="flex-shrink-0">
      <img src="/img/logo.svg" alt="Logo" class="xl:h-12 lg:h-10 h-8 sm:h-6" />
    </a>

    <!-- Desktop Navigation -->
    <nav class="hidden md:block">
      <ul class="flex space-x-8">
        {
          menuOptions.map((option) => (
            <li>
              <a
                href={`#${option.name.toLowerCase()}`}
                class="menu-link text-white hover:text-rose transition-colors xl:text-lg hover:bg-rose/20 active:bg-rose/40 rounded-md px-3 py-2"
              >
                {option.name}
                <sup>{option.index}</sup>
              </a>
            </li>
          ))
        }
      </ul>
    </nav>

    <!-- Mobile Menu Button -->
    <button
      id="menuButton"
      class="md:hidden text-white hover:text-rose text-2xl"
    >
      â˜°
    </button>
  </div>

  <!-- Mobile Navigation -->
  <div
    id="mobileMenu"
    class="lg:hidden hidden absolute top-full right-4 w-64 bg-blue bg-opacity-95 shadow-lg rounded-lg"
  >
    <nav class="px-4 py-2">
      <ul class="space-y-2">
        {
          menuOptions.map((option) => (
            <li>
              <a
                href={`#${option.name.toLowerCase()}`}
                class="menu-link block w-full text-lg px-6 py-4 rounded-md text-center text-white hover:text-rose hover:bg-rose/20 active:bg-rose/40 transition-colors font-semibold"
              >
                {option.name}
                <sup>{option.index}</sup>
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
  </div>
</header>

<script>
  const menuButton = document.getElementById("menuButton");
  const mobileMenu = document.getElementById("mobileMenu");
  const header = document.getElementById("header");
  const menuOptions = [
    { name: "About", index: "01", link: "#about" },
    { name: "Skills", index: "02", link: "#skills" },
    { name: "Work", index: "03", link: "#work" },
    { name: "Blog", index: "04", link: "#blog" },
    { name: "Contact", index: "05", link: "#contact" },
  ];

  // Helper: Smooth scroll with offset
  function scrollToSectionWithOffset(id: string) {
    const el = document.getElementById(id);
    if (el) {
      // Use header height as offset, fallback to 0 if not found
      const offset = header ? header.getBoundingClientRect().height : 0;
      const y = el.getBoundingClientRect().top + window.pageYOffset - offset;
      window.scrollTo({ top: y, behavior: "smooth" });
    }
  }

  // Attach click listeners to all nav links (desktop & mobile)
  function setupNavLinks() {
    document.querySelectorAll('a[href^="#"]').forEach((link) => {
      (link as HTMLAnchorElement).addEventListener("click", function (e: MouseEvent) {
        const hash = (this as HTMLAnchorElement).getAttribute("href");
        if (hash && hash.startsWith("#")) {
          const id = hash.slice(1);
          if (document.getElementById(id)) {
            e.preventDefault();
            scrollToSectionWithOffset(id);
            // If mobile menu is open, close it
            if (mobileMenu && !mobileMenu.classList.contains("hidden")) {
              mobileMenu.classList.add("hidden");
            }
          }
        }
      });
    });
  }

  // Helper: Get all section IDs from menuOptions
  const sectionIds = menuOptions.map(opt => opt.name.toLowerCase());

  // Helper: Set active menu link
  function setActiveMenu(id: string) {
    document.querySelectorAll('.menu-link').forEach(link => {
      const hash = link.getAttribute('href');
      if (hash === `#${id}`) {
        link.classList.add('active-menu');
      } else {
        link.classList.remove('active-menu');
      }
    });
  }

  // Scroll event handler to update active menu
  function onScroll(): void {
    let current = sectionIds[0];
    for (const id of sectionIds) {
      const section = document.getElementById(id);
      if (section) {
        const sectionTop = section.getBoundingClientRect().top - (header ? header.getBoundingClientRect().height : 0);
        if (sectionTop <= 0) {
          current = id;
        }
      }
    }
    setActiveMenu(current);
  }

  if (menuButton && mobileMenu) {
    menuButton.addEventListener("click", () => {
      mobileMenu.classList.toggle("hidden");
    });
  }

  // Setup nav links and scroll handler on DOMContentLoaded
  document.addEventListener("DOMContentLoaded", () => {
    setupNavLinks();
    onScroll();
  });
  window.addEventListener('scroll', onScroll);
</script>
